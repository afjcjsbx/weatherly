Index: lambda-function/docutils-0.15.2.dist-info/WHEEL
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/docutils-0.15.2.dist-info/WHEEL	(date 1597411787888)
+++ lambda-function/docutils-0.15.2.dist-info/WHEEL	(date 1597411787888)
@@ -0,0 +1,5 @@
+Wheel-Version: 1.0
+Generator: bdist_wheel (0.33.4)
+Root-Is-Purelib: true
+Tag: py3-none-any
+
Index: lambda-function/docutils-0.15.2.dist-info/METADATA
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/docutils-0.15.2.dist-info/METADATA	(date 1597411787888)
+++ lambda-function/docutils-0.15.2.dist-info/METADATA	(date 1597411787888)
@@ -0,0 +1,60 @@
+Metadata-Version: 2.1
+Name: docutils
+Version: 0.15.2
+Summary: Docutils -- Python Documentation Utilities
+Home-page: http://docutils.sourceforge.net/
+Author: David Goodger
+Author-email: goodger@python.org
+Maintainer: docutils-develop list
+Maintainer-email: docutils-develop@lists.sourceforge.net
+License: public domain, Python, 2-Clause BSD, GPL 3 (see COPYING.txt)
+Platform: OS-independent
+Classifier: Development Status :: 4 - Beta
+Classifier: Environment :: Console
+Classifier: Intended Audience :: End Users/Desktop
+Classifier: Intended Audience :: Other Audience
+Classifier: Intended Audience :: Developers
+Classifier: Intended Audience :: System Administrators
+Classifier: License :: Public Domain
+Classifier: License :: OSI Approved :: Python Software Foundation License
+Classifier: License :: OSI Approved :: BSD License
+Classifier: License :: OSI Approved :: GNU General Public License (GPL)
+Classifier: Operating System :: OS Independent
+Classifier: Programming Language :: Python :: 2
+Classifier: Programming Language :: Python :: 2.6
+Classifier: Programming Language :: Python :: 2.7
+Classifier: Programming Language :: Python :: 3
+Classifier: Programming Language :: Python :: 3.4
+Classifier: Programming Language :: Python :: 3.5
+Classifier: Programming Language :: Python :: 3.6
+Classifier: Programming Language :: Python :: 3.7
+Classifier: Topic :: Documentation
+Classifier: Topic :: Software Development :: Documentation
+Classifier: Topic :: Text Processing
+Classifier: Natural Language :: English
+Classifier: Natural Language :: Afrikaans
+Classifier: Natural Language :: Catalan
+Classifier: Natural Language :: Chinese (Simplified)
+Classifier: Natural Language :: Chinese (Traditional)
+Classifier: Natural Language :: Czech
+Classifier: Natural Language :: Dutch
+Classifier: Natural Language :: Esperanto
+Classifier: Natural Language :: Finnish
+Classifier: Natural Language :: French
+Classifier: Natural Language :: Galician
+Classifier: Natural Language :: German
+Classifier: Natural Language :: Italian
+Classifier: Natural Language :: Japanese
+Classifier: Natural Language :: Polish
+Classifier: Natural Language :: Portuguese (Brazilian)
+Classifier: Natural Language :: Russian
+Classifier: Natural Language :: Slovak
+Classifier: Natural Language :: Spanish
+Classifier: Natural Language :: Swedish
+Requires-Python: >=2.6, !=3.0.*, !=3.1.*, !=3.2.*
+
+Docutils is a modular system for processing documentation
+into useful formats, such as HTML, XML, and LaTeX.  For
+input Docutils supports reStructuredText, an easy-to-read,
+what-you-see-is-what-you-get plaintext markup syntax.
+
Index: lambda-function/docutils-0.15.2.dist-info/RECORD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/docutils-0.15.2.dist-info/RECORD	(date 1597411788619)
+++ lambda-function/docutils-0.15.2.dist-info/RECORD	(date 1597411788619)
@@ -0,0 +1,334 @@
+../../bin/__pycache__/rst2html.cpython-38.pyc,,
+../../bin/__pycache__/rst2html4.cpython-38.pyc,,
+../../bin/__pycache__/rst2html5.cpython-38.pyc,,
+../../bin/__pycache__/rst2latex.cpython-38.pyc,,
+../../bin/__pycache__/rst2man.cpython-38.pyc,,
+../../bin/__pycache__/rst2odt.cpython-38.pyc,,
+../../bin/__pycache__/rst2odt_prepstyles.cpython-38.pyc,,
+../../bin/__pycache__/rst2pseudoxml.cpython-38.pyc,,
+../../bin/__pycache__/rst2s5.cpython-38.pyc,,
+../../bin/__pycache__/rst2xetex.cpython-38.pyc,,
+../../bin/__pycache__/rst2xml.cpython-38.pyc,,
+../../bin/__pycache__/rstpep2html.cpython-38.pyc,,
+../../bin/rst2html.py,sha256=_ZSHNn9dmPKAx6L7qZ8XgfPAy3KZv5MNky6n_8V3xiI,584
+../../bin/rst2html4.py,sha256=u5YWYGbe9xyegHW30S6gzVpAg8nTI9Xu_ZOeve5CbOo,704
+../../bin/rst2html5.py,sha256=RxQhnlyp0iyPae4E_rwvaM9ToBFhfr16lywsnwC6xtY,1130
+../../bin/rst2latex.py,sha256=nLGST5HE554VD4EbuhUn2_6kijGgDFcQgOMa4RrFngI,781
+../../bin/rst2man.py,sha256=cJHLwJTI7kSR-7n_WhIQ_e11oEJr-ZMK97fKy5GZ3q0,590
+../../bin/rst2odt.py,sha256=iH9HaLPbzEfJU599E2DvAW2n2py69TXfJDOIZEHRsyk,754
+../../bin/rst2odt_prepstyles.py,sha256=tPj049dHEFj2cCedGmT6jSTtD-ZxLHrE4NJQVFLjZLk,1688
+../../bin/rst2pseudoxml.py,sha256=9SwwDEOFNz3AqOSI4CEvhieDm_3TgTPN_3FDPz6b5ys,591
+../../bin/rst2s5.py,sha256=zdT-5LNxruUZqMVe-Wjj1F-eXan9pLDBvxA1k38XRGw,627
+../../bin/rst2xetex.py,sha256=SzPM2iz6wCAc8Ki3sEnhCq6318jTQziosToib4FIzEw,861
+../../bin/rst2xml.py,sha256=MKbl4dkpIBjzh4GdITggzJpi-SMGoRaXdkbZs-yd05E,592
+../../bin/rstpep2html.py,sha256=TlXeA4lyMxtICwwaEERXcrXTleXfwyQE5qbooZLtcSw,660
+docutils-0.15.2.dist-info/COPYING.txt,sha256=76DIWqmepbR4EkADGw0Cr1TXtVVMh60rK-qbpJD2Zj8,5538
+docutils-0.15.2.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
+docutils-0.15.2.dist-info/METADATA,sha256=qJAsjhodQXnH1VWiarPJGrNRy3bAEgfyjtqX-AR2AOk,2593
+docutils-0.15.2.dist-info/RECORD,,
+docutils-0.15.2.dist-info/WHEEL,sha256=S8S5VL-stOTSZDYxHyf0KP7eds0J72qrK0Evu3TfyAY,92
+docutils-0.15.2.dist-info/top_level.txt,sha256=dPq3jQoxpMOEhrZ1tQh3_-9hqhdvOjUplSdSVDAc95A,9
+docutils/__init__.py,sha256=3PGoFn0nNh4ERJqUFA0AZXIGMH8JVXtWrTp2Ea45fz8,7758
+docutils/__pycache__/__init__.cpython-38.pyc,,
+docutils/__pycache__/_compat.cpython-38.pyc,,
+docutils/__pycache__/core.cpython-38.pyc,,
+docutils/__pycache__/examples.cpython-38.pyc,,
+docutils/__pycache__/frontend.cpython-38.pyc,,
+docutils/__pycache__/io.cpython-38.pyc,,
+docutils/__pycache__/nodes.cpython-38.pyc,,
+docutils/__pycache__/statemachine.cpython-38.pyc,,
+docutils/_compat.py,sha256=HZOhqMWrxFS1tGBtYgwDdtdUFqxoTApOQ2Ljj6j_Vpw,697
+docutils/core.py,sha256=a-uPGEnQqhxHIyWZNfckm8J3xHkS9S1nuBA--JWo664,29576
+docutils/examples.py,sha256=nlPe2PYXNvz5ZAVRu7xHHiV7qML7s-eyUu4Gun7j3SY,3959
+docutils/frontend.py,sha256=pCDFpiVIxnHjYiwr_vFmDhhyWSIv12w9FTPUStX-k0o,36893
+docutils/io.py,sha256=bVqhftRyRAll_7hs1Hqky8CEiAgpYBQ3I0FN-1i-bVY,17155
+docutils/languages/__init__.py,sha256=sPYW3taS_5jA_X_sUW2MzmNf-Ivg6uIJjkCdjkK1Mro,1554
+docutils/languages/__pycache__/__init__.cpython-38.pyc,,
+docutils/languages/__pycache__/af.cpython-38.pyc,,
+docutils/languages/__pycache__/ca.cpython-38.pyc,,
+docutils/languages/__pycache__/cs.cpython-38.pyc,,
+docutils/languages/__pycache__/da.cpython-38.pyc,,
+docutils/languages/__pycache__/de.cpython-38.pyc,,
+docutils/languages/__pycache__/en.cpython-38.pyc,,
+docutils/languages/__pycache__/eo.cpython-38.pyc,,
+docutils/languages/__pycache__/es.cpython-38.pyc,,
+docutils/languages/__pycache__/fa.cpython-38.pyc,,
+docutils/languages/__pycache__/fi.cpython-38.pyc,,
+docutils/languages/__pycache__/fr.cpython-38.pyc,,
+docutils/languages/__pycache__/gl.cpython-38.pyc,,
+docutils/languages/__pycache__/he.cpython-38.pyc,,
+docutils/languages/__pycache__/it.cpython-38.pyc,,
+docutils/languages/__pycache__/ja.cpython-38.pyc,,
+docutils/languages/__pycache__/ko.cpython-38.pyc,,
+docutils/languages/__pycache__/lt.cpython-38.pyc,,
+docutils/languages/__pycache__/lv.cpython-38.pyc,,
+docutils/languages/__pycache__/nl.cpython-38.pyc,,
+docutils/languages/__pycache__/pl.cpython-38.pyc,,
+docutils/languages/__pycache__/pt_br.cpython-38.pyc,,
+docutils/languages/__pycache__/ru.cpython-38.pyc,,
+docutils/languages/__pycache__/sk.cpython-38.pyc,,
+docutils/languages/__pycache__/sv.cpython-38.pyc,,
+docutils/languages/__pycache__/zh_cn.cpython-38.pyc,,
+docutils/languages/__pycache__/zh_tw.cpython-38.pyc,,
+docutils/languages/af.py,sha256=6wl-XbsF8wbSiBs5IORna4Lz-WPqnnye_6qr8Cbh_1c,1824
+docutils/languages/ca.py,sha256=pnkOJbqff_hPefBYAy4Sw8V1PNRChPyKE6TV_S8SCzU,1906
+docutils/languages/cs.py,sha256=DJLwqe6tQDfFSBkmT1T3Pgc_GEB2Cp0Gu4wGtBeF-os,1894
+docutils/languages/da.py,sha256=9rMaO-mkPO6BbS02nNtStg2LNOBkJGLYsdDYJ_bsav0,1872
+docutils/languages/de.py,sha256=AQTUIl4j3x43kQi5800-lobZHsh06VOsrxfAjS5FHGM,1722
+docutils/languages/en.py,sha256=tWVrPr6593mIzFokX_4Hw1fC6ZWC8GPdgpc72jmQq1g,1848
+docutils/languages/eo.py,sha256=3vzdUkAdQvYylw2wzuDqTfqzZ-8YojrVzSs6ywQxDuk,1930
+docutils/languages/es.py,sha256=yjnBsKY1BqIXSWK7gCAUSc01CgZp72gJNaORQosPEgk,1928
+docutils/languages/fa.py,sha256=h6nMMv_x56PsYLhpTP8ZSs5buohtxu_fRBs4wDZZJBA,1974
+docutils/languages/fi.py,sha256=BAYNU7znDucYvVfaN3BOVVVnTcRGjkIZzurBF11S9J8,1958
+docutils/languages/fr.py,sha256=EcvFQHiD6fRFWiTQ8bBzs8XEqmvn-HLY-srcU6YktcY,1825
+docutils/languages/gl.py,sha256=YbgUuncmDraQCGc1BMH-J8RR3YPf4A1CJARkJaIJ3hQ,2006
+docutils/languages/he.py,sha256=Mg40ypidfnzGiEAZ1c39QOL8kF47gwG9HQpNipy9ruY,2649
+docutils/languages/it.py,sha256=Z3eh86YrmB8aT_Dl56X7W2gqpJgYK0v0QnJ07hekXlM,1808
+docutils/languages/ja.py,sha256=Ga0KgkqV17n-lzQrL2r9EztE0Ew2H4g5G9CZWBIENUw,1908
+docutils/languages/ko.py,sha256=Kd4G53cEFtkeLwAZHyS9dDIOcNSCHzCd5Y6Sm7V7dLA,1848
+docutils/languages/lt.py,sha256=v6cQn5hhPUwpLEwyKi6SuPCm4QGIX5NO6-RqDiiccx0,1935
+docutils/languages/lv.py,sha256=tEqF4ya9h4FznB-uiUKQnNLY2XDFRatxKt2evJPhsDM,1867
+docutils/languages/nl.py,sha256=3CjsGFeJgLZEw2xhHxAc4sYDKRW6ODUZsVyibjl7DmM,1865
+docutils/languages/pl.py,sha256=0RKtO5kWeAaUHI2g4vrLFbQ1ptS1Z8jFdQthAU3ffYA,1866
+docutils/languages/pt_br.py,sha256=aaFGDV0c6uo63Ra2bOqIVX9zCXkbpzZSNXtaB37AnUA,1948
+docutils/languages/ru.py,sha256=duC7XA0wyM21ftlHkT98ALKAQjup4gyslSoObpnSihw,2087
+docutils/languages/sk.py,sha256=Hi8AnKIt3dZdEmMP2-V0LN9WIiAufsTAHE9s7lNGQYE,1826
+docutils/languages/sv.py,sha256=XlNKER3JFarxMixMXawh6MhtDNqC3Ck8vM1CjsjYYcs,2069
+docutils/languages/zh_cn.py,sha256=eCBAdQZG2HBzablBr8X4ns_QCnTX93kwnIxwDa-Xa-U,1989
+docutils/languages/zh_tw.py,sha256=mJCANBTb4-Aj1QdsiYyRCTG4Yej0UquniwxI301_p60,2746
+docutils/nodes.py,sha256=T-VWZ0NfUAjY8Kd_EuQIPQyrSr6TIvZjvtF_CxENPRw,78311
+docutils/parsers/__init__.py,sha256=aDrATsCPGo92zucFl_n2ludoFSfxOrmdF7U8oQV0uEQ,1584
+docutils/parsers/__pycache__/__init__.cpython-38.pyc,,
+docutils/parsers/__pycache__/null.cpython-38.pyc,,
+docutils/parsers/null.py,sha256=LtO7n-E6lNOs4mLXZ2SiShB3C630SoJ80ugd9fh1vXI,445
+docutils/parsers/rst/__init__.py,sha256=2QD5W87iuNtxayrYyPXxpn7twgv2sm6qhhVkmxrZ0_c,16201
+docutils/parsers/rst/__pycache__/__init__.cpython-38.pyc,,
+docutils/parsers/rst/__pycache__/roles.cpython-38.pyc,,
+docutils/parsers/rst/__pycache__/states.cpython-38.pyc,,
+docutils/parsers/rst/__pycache__/tableparser.cpython-38.pyc,,
+docutils/parsers/rst/directives/__init__.py,sha256=UkUcAKCPLWUCZVcrWQ_lSwXf5unSNvX79C77UO9zNKc,13989
+docutils/parsers/rst/directives/__pycache__/__init__.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/admonitions.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/body.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/html.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/images.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/misc.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/parts.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/references.cpython-38.pyc,,
+docutils/parsers/rst/directives/__pycache__/tables.cpython-38.pyc,,
+docutils/parsers/rst/directives/admonitions.py,sha256=w38T7YfRc0isuF5qmaw-6wOQgHx9xGHJBqu_gDqQCdI,2413
+docutils/parsers/rst/directives/body.py,sha256=fWdkVQaFrgY0hdy_Y55WWPHep3CVAJHVyoWNUCB7cJg,9244
+docutils/parsers/rst/directives/html.py,sha256=AO7fjN8MeSU2qdAbRUA5O0PI2ngmkpgXFsaucrZ_I4w,3235
+docutils/parsers/rst/directives/images.py,sha256=_3pkoQFWv8U2hSJBl6Z6p2I5yt8y1R3SEJhW4fYdzaI,6926
+docutils/parsers/rst/directives/misc.py,sha256=xXfhIH0dDOgKygEVM2MtqgHScTTMqhoLPMcpoeN_rdU,23875
+docutils/parsers/rst/directives/parts.py,sha256=Mx7y6BwTP1WAD_qnL-g0bjg1_O06NCXgqeYCPfP4JbI,4251
+docutils/parsers/rst/directives/references.py,sha256=1Y1yhe_O2PqLtQUSly-ny291nrQKJgQiO4Hu7Xew9Zo,831
+docutils/parsers/rst/directives/tables.py,sha256=PlXAFX2U0ztNMKdcZyluBRmgIq9xI11l8hqoocov09w,22842
+docutils/parsers/rst/include/README.txt,sha256=_C6pSfeGShQ0evvKKKZUtx4bP4RFG9UoUlgHoMn06DU,666
+docutils/parsers/rst/include/isoamsa.txt,sha256=CioOAjUSuL_MG2JHqVHst0ceHzF0v3kupB6stgPMD2g,10925
+docutils/parsers/rst/include/isoamsb.txt,sha256=pSD9D42IRcGBcjYXrJUBFicIA7KRtfBhCKnFlJiytC0,7242
+docutils/parsers/rst/include/isoamsc.txt,sha256=wC2J-pHkHJMokFfOg6S5_6TX1LcibltUpLMWkm-OT3U,1723
+docutils/parsers/rst/include/isoamsn.txt,sha256=LPorblUlj9fua5tpigH-lAfqPYj_yXWQiOa91CpBD7w,6721
+docutils/parsers/rst/include/isoamso.txt,sha256=3CB6lhSNhRIAY-ST8hGPRrO-6wxI2jhYnWTU1_uBXyY,3825
+docutils/parsers/rst/include/isoamsr.txt,sha256=3qVvk1ueHuE6jnHp8ypn6UWtZH5Ly2njNDj09Xeh2qU,11763
+docutils/parsers/rst/include/isobox.txt,sha256=tYnVIj92mJ5jiY8H9-S3CzBprjU8scuJZ8BO_eWEdwc,3101
+docutils/parsers/rst/include/isocyr1.txt,sha256=-V1dpOyKxXBzNBxcW7IJp1W-SIkaXd0KVm8TP58a5B8,4241
+docutils/parsers/rst/include/isocyr2.txt,sha256=3pDslLms3yuJgQTcWtu8U1FMrMQ4KgxtDT18Ci6Mvz4,1882
+docutils/parsers/rst/include/isodia.txt,sha256=-qThXeZ-WFGztOuu_koRrlvDJpSkMVB4ivU9yyE2y7Y,869
+docutils/parsers/rst/include/isogrk1.txt,sha256=xnCDDphWarsNmum9SQRvntznPx7m547rRRuQs7PdYpQ,3010
+docutils/parsers/rst/include/isogrk2.txt,sha256=zbi3-LuRB6T0jGj_yffmgm_8_mwz-6ygAYvgie32ls0,1705
+docutils/parsers/rst/include/isogrk3.txt,sha256=X8fGxnVIG1ygvvc9hpYgUHt1d8ANdD-gxn6aKWEaRf0,2880
+docutils/parsers/rst/include/isogrk4-wide.txt,sha256=rpweSoCmHEC1vL44LEeIE8Re2tm5FEAWnae6CO2oe1I,3035
+docutils/parsers/rst/include/isogrk4.txt,sha256=zptf_ntrFuMsuk0OhEjUkRwYrz0YGDuD-_6ReIHOunY,372
+docutils/parsers/rst/include/isolat1.txt,sha256=F5R0rnBefjAbqWFCkWMFpxVKWoSec8VM0KU8DRtMCYI,4397
+docutils/parsers/rst/include/isolat2.txt,sha256=YBBbW3o9HD1JHV3QVfpaFeKnRsh2vPs0dNvpTJSEoSU,8466
+docutils/parsers/rst/include/isomfrk-wide.txt,sha256=EtzR0nFzhkCmf8CKR4hLWSAgbUjHs4sYfpJEyDp8CjY,3334
+docutils/parsers/rst/include/isomfrk.txt,sha256=zZy3M5BmklzpL02dImsAuWA1jVw7nxqx3xyZLKtILfA,519
+docutils/parsers/rst/include/isomopf-wide.txt,sha256=QUhEHzhyuCM3qzrqG5luXuL28Uoqt7I7v-CfzToG8sI,1931
+docutils/parsers/rst/include/isomopf.txt,sha256=MGuLb8WfrDm7GWvdmvYHsWtrWyh6MqRRo7wnpiaia0U,639
+docutils/parsers/rst/include/isomscr-wide.txt,sha256=VHq8miDC5nKS6Rlvv9aWpS1D_naXcfZd1CsEpJ2W8-g,3231
+docutils/parsers/rst/include/isomscr.txt,sha256=WvB9Zek3TqSyIDfw5QmE_uTvXNwjBpYU0EQttckdLJo,776
+docutils/parsers/rst/include/isonum.txt,sha256=DHWd87O6CCaSz10PEGZOxLqpDLHiMZ6--0VR9o0Yt-Q,4066
+docutils/parsers/rst/include/isopub.txt,sha256=oULMcx0Ugjk6EZAMcxHZpZM_MC7kNuzecu-sMAHVZro,4613
+docutils/parsers/rst/include/isotech.txt,sha256=h6z4dEMoVtarA9E489Zru1H29c01hWWGqbfD3wgUmiM,9726
+docutils/parsers/rst/include/mmlalias.txt,sha256=YxSvNJVNsrzgIGNjtAjtx2tVXUuby5twMZxr5Mq3PJo,45428
+docutils/parsers/rst/include/mmlextra-wide.txt,sha256=KKNjVkG-xHbeCagQfQDotJxY5oF6S6Bmk60bEv49NUQ,9010
+docutils/parsers/rst/include/mmlextra.txt,sha256=Y50tQh0fLYClCc0DUVrxr2loU5u5YaUaYbFc9PEya_c,6800
+docutils/parsers/rst/include/s5defs.txt,sha256=_5JOMpDtaufiZbdxh6QKpICqLvGpB9cypHM-SEt3sKA,1036
+docutils/parsers/rst/include/xhtml1-lat1.txt,sha256=-cEYtq3oOOoLQS6n2KmsAcIs3Y5s78mToBkUXuSrSKA,6112
+docutils/parsers/rst/include/xhtml1-special.txt,sha256=dVNILahp_Jkf0bQVX-gGFcQXst3oR-FvQmAt6lDSTpE,1945
+docutils/parsers/rst/include/xhtml1-symbol.txt,sha256=K-f7hr-LRv1NKOxjZtckBmtMQOiddlnJJ-6DG-YoAzI,7028
+docutils/parsers/rst/languages/__init__.py,sha256=CNPSmhyFmPTaeQZeE6wYQWs0un0RL4uGReBAyRenwpM,1013
+docutils/parsers/rst/languages/__pycache__/__init__.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/af.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/ca.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/cs.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/da.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/de.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/en.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/eo.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/es.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/fa.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/fi.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/fr.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/gl.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/he.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/it.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/ja.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/ko.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/lt.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/lv.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/nl.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/pl.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/pt_br.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/ru.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/sk.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/sv.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/zh_cn.cpython-38.pyc,,
+docutils/parsers/rst/languages/__pycache__/zh_tw.cpython-38.pyc,,
+docutils/parsers/rst/languages/af.py,sha256=xe0BiiJPW_JPzTf4kFbcl6QYZPOLyzkBvUF1T74tJ4s,3672
+docutils/parsers/rst/languages/ca.py,sha256=BzWwjhjlIw7u6dso8QDsfFWrIAz7N2hlUTk3Z0iYdSc,4374
+docutils/parsers/rst/languages/cs.py,sha256=Rqwns8Bk4er1Xz11TL97BgVyg43_cCvQi6BTS6FPhFw,4781
+docutils/parsers/rst/languages/da.py,sha256=_9821hrGVQUPHciU1c79sMvLWAw3NZ8Memwnl19xudI,3685
+docutils/parsers/rst/languages/de.py,sha256=aQrzFPIgANaSmBkm5bVTWvjRtXbaoYG-IR32DgNTBUI,3442
+docutils/parsers/rst/languages/en.py,sha256=z_J8xJ1gBTk5MX6u_bonFGoop_e8VF6jWgq9Tzl5gNY,3317
+docutils/parsers/rst/languages/eo.py,sha256=QBXf1JDJZnOtfHXpxDnyuI_NaauyrvL_CZhpjxIDDgQ,3815
+docutils/parsers/rst/languages/es.py,sha256=6DIBhctgsMhIpgpPR6HX1eBH86M2Wjh3LpvmNF5QNaE,4169
+docutils/parsers/rst/languages/fa.py,sha256=4wY7BM2zRTK0qp2SXtNPoNQk-j3JkEt0Dbvt5dZ50SY,3294
+docutils/parsers/rst/languages/fi.py,sha256=WqG8bTkYqb54WHSdusj7b2vi0D4_pnuDviUs7sOIBvw,3541
+docutils/parsers/rst/languages/fr.py,sha256=iGClr3TykJsRDW-qYax9WLtm9Tf71mX3iKp9a8KX96k,3639
+docutils/parsers/rst/languages/gl.py,sha256=FdAFl6UNj7_lHH1kiJXzn91yVINGXNarCfG2YGCjzVs,3637
+docutils/parsers/rst/languages/he.py,sha256=YLbykuC7-W6buMQhZ6gRQkhxwSaEAoZ9vE2lzljpIfs,3624
+docutils/parsers/rst/languages/it.py,sha256=reGyH9djUffoQlzWU86kcewlYgE1zokm9BsOdhTeDtw,3268
+docutils/parsers/rst/languages/ja.py,sha256=fVSIAuucrA3jXQ9Ii1T-BQIX-kPGmgf-kveEChqpzxs,3780
+docutils/parsers/rst/languages/ko.py,sha256=hJUrlK2V8Zr9qQwrkwSnSDiu4_Qb4vN3v8nMEv8mGUk,3376
+docutils/parsers/rst/languages/lt.py,sha256=8q9RWv_VZZKL6j2gV3G5DDwLNLbmqoY0iEIQwM55dN4,3524
+docutils/parsers/rst/languages/lv.py,sha256=OfnTo1Si1V1E_7yNAwkyQMe6y07FsOA_F-1H2Fb6vIU,3381
+docutils/parsers/rst/languages/nl.py,sha256=aJMyq4j8jmd1cghIQIYlR1gfGnNYa0XfGvaeRz6Ea6c,3703
+docutils/parsers/rst/languages/pl.py,sha256=R15HMWtDAVgzkumBC7cpHPA7Lh1i81lb8HkIHhSUZBs,3362
+docutils/parsers/rst/languages/pt_br.py,sha256=x69c3vQ6HmFCgHImEJ39FWh9tiKJNG-tBjeDXdDFOTg,3956
+docutils/parsers/rst/languages/ru.py,sha256=lZLdYjg4XVVGPtIqBrRMvIEcOilj8rfJZD1A81rYGD8,3209
+docutils/parsers/rst/languages/sk.py,sha256=muDmMtFOCg6kKJRsNLBi2W4X4zNr0NBOxoX0S3jpw6M,3917
+docutils/parsers/rst/languages/sv.py,sha256=yyyLJ8PxCnrNwcbHgGpuV3WD4r_UBUq19O7wvQBbn6g,3267
+docutils/parsers/rst/languages/zh_cn.py,sha256=t46kRJ0lpE4HzBqM3D69dZ4L5yIiEmEe3YjAg0NX4A4,3936
+docutils/parsers/rst/languages/zh_tw.py,sha256=PMF36fHm8WXGAB3IJM6o0FrtH5U9G6P7dzhlVmYw-_8,5165
+docutils/parsers/rst/roles.py,sha256=sjscCmwFGxBMUTxuZPnaIvuFirckVeqelCaZLchVY-E,14978
+docutils/parsers/rst/states.py,sha256=KCf3i48YGCfTsRZaWfaWTvcCetPfB8XzW1lQ-sKBLtg,132221
+docutils/parsers/rst/tableparser.py,sha256=uX4iq4BWZ5U__swdZ3j8xiIOuRF8YKsygvhof9Oi4oI,21041
+docutils/readers/__init__.py,sha256=5alRbkyRVbNkq8njp1egI_OnGyXkxQBwMGa9MbxAoD4,3456
+docutils/readers/__pycache__/__init__.cpython-38.pyc,,
+docutils/readers/__pycache__/doctree.cpython-38.pyc,,
+docutils/readers/__pycache__/pep.cpython-38.pyc,,
+docutils/readers/__pycache__/standalone.cpython-38.pyc,,
+docutils/readers/doctree.py,sha256=9QNTk_8x46sDkcSjzQiyFZxN-m9CBO3XA5bLar7OA0Q,1607
+docutils/readers/pep.py,sha256=V9b6SUQ_h74KK11wq5k2icEPGWQuVDG5gCzhWlJdF3Y,1555
+docutils/readers/standalone.py,sha256=6kRgqKD_REEZ_zZE5AW0rLj_rqOhisubS2ADyLjOAJQ,2340
+docutils/statemachine.py,sha256=A-TfKOMkw5_C-Luz4_MTygXU7_aLxkRi-FwKIAttQmQ,57489
+docutils/transforms/__init__.py,sha256=N6oBhXeqbXUZEmOCZnxRx1CckEaPkEkNxvpnLS9p49U,6522
+docutils/transforms/__pycache__/__init__.cpython-38.pyc,,
+docutils/transforms/__pycache__/components.cpython-38.pyc,,
+docutils/transforms/__pycache__/frontmatter.cpython-38.pyc,,
+docutils/transforms/__pycache__/misc.cpython-38.pyc,,
+docutils/transforms/__pycache__/parts.cpython-38.pyc,,
+docutils/transforms/__pycache__/peps.cpython-38.pyc,,
+docutils/transforms/__pycache__/references.cpython-38.pyc,,
+docutils/transforms/__pycache__/universal.cpython-38.pyc,,
+docutils/transforms/__pycache__/writer_aux.cpython-38.pyc,,
+docutils/transforms/components.py,sha256=F0fXyOZsf_OA0QsX-jIAsk3RLCrkEW9GRR1-l0Nx13o,1993
+docutils/transforms/frontmatter.py,sha256=O-WS3qtKzcYxt2-Lj7cjW89Y-kevndVrBb_mvWmYHzg,20098
+docutils/transforms/misc.py,sha256=0jDAIndz8a7C5TVWLkC44N1pVfhwZu4nu-lnk1GmzGg,4882
+docutils/transforms/parts.py,sha256=bChMp_9YRJ6c6SBv6aIZBDCZq6P6vs9VB7ecEMEIJ74,6924
+docutils/transforms/peps.py,sha256=NdXwjk5gvzuzWDXred5OEbpPIDn2bWxECrBkYC_gF10,11056
+docutils/transforms/references.py,sha256=obF3UAoRerUPTUjjlCtu5T9AVadnq71ZTa6CUb9FRK0,36464
+docutils/transforms/universal.py,sha256=sgl_604KZXi0KLzcnNo9hu8p3Jk2bmpYW98NWNzMGa8,11102
+docutils/transforms/writer_aux.py,sha256=4Zd8z8s4jTG2J0xSnm5hj1kiZrKN6FqvGvpJ1cb09oU,2609
+docutils/utils/__init__.py,sha256=ksTJjfmXGGDadoibjdH1tjnmaE8Z4ZiIPWQS8kYYi3k,28789
+docutils/utils/__pycache__/__init__.cpython-38.pyc,,
+docutils/utils/__pycache__/code_analyzer.cpython-38.pyc,,
+docutils/utils/__pycache__/error_reporting.cpython-38.pyc,,
+docutils/utils/__pycache__/punctuation_chars.cpython-38.pyc,,
+docutils/utils/__pycache__/roman.cpython-38.pyc,,
+docutils/utils/__pycache__/smartquotes.cpython-38.pyc,,
+docutils/utils/__pycache__/urischemes.cpython-38.pyc,,
+docutils/utils/code_analyzer.py,sha256=YUjSoNnjHVe6NxOR-FXSluNMdxivEvaWRJk0xJ0_FuI,5225
+docutils/utils/error_reporting.py,sha256=VgTHGcA5t3YFqTzdiqDi5fdsnCYqlxL8__z9gZ1Sla0,8362
+docutils/utils/math/__init__.py,sha256=TUGMP6ytwBzbQCHrFSxSl8OcDdbLGfCCkGteBdWm6l0,1755
+docutils/utils/math/__pycache__/__init__.cpython-38.pyc,,
+docutils/utils/math/__pycache__/latex2mathml.cpython-38.pyc,,
+docutils/utils/math/__pycache__/math2html.cpython-38.pyc,,
+docutils/utils/math/__pycache__/tex2mathml_extern.cpython-38.pyc,,
+docutils/utils/math/__pycache__/tex2unichar.cpython-38.pyc,,
+docutils/utils/math/__pycache__/unichar2tex.cpython-38.pyc,,
+docutils/utils/math/latex2mathml.py,sha256=QwKm83KJz281QYxz__nhCl00Uk-UA1RGC2PlvMAa0N4,17407
+docutils/utils/math/math2html.py,sha256=Eknku8dBz4HQEAfSGWun859YyH8mjjTS34hnQ_k4lxQ,178955
+docutils/utils/math/tex2mathml_extern.py,sha256=168pgQ7aIADq1fys5jMHyNS1tHTrffpHw4X8w4fhKrY,5600
+docutils/utils/math/tex2unichar.py,sha256=bq0GY1pvCUr4EllEEJk7LNl90wOgp0xofbORTQAj0CM,34481
+docutils/utils/math/unichar2tex.py,sha256=D5EcOS2j7gKSkO56vpnAr_nx1Ji3t6wBKOpiD8uGPd4,16811
+docutils/utils/punctuation_chars.py,sha256=1T_JudoB_TFYD_JYMYJ-gWDPvJ6PZzez59r2NNyke-c,6364
+docutils/utils/roman.py,sha256=9BbuHddXRSjNS3E4TnaW-SQWaIK7cso-s72aa4R5cWE,2687
+docutils/utils/smartquotes.py,sha256=Zipeh1uL6ye9vxd3BF2InGpEAu_1lDYwAwMiQK2bNt8,39864
+docutils/utils/urischemes.py,sha256=2Y9dzkd8_mri0isGvPwhX-oDhkVLKbw-T0UstBsqiIc,6275
+docutils/writers/__init__.py,sha256=ybRAHTZrV29u5zCFTbAcQvh6ZZDRgQqliRn4cPMiVzw,4593
+docutils/writers/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/__pycache__/_html_base.cpython-38.pyc,,
+docutils/writers/__pycache__/docutils_xml.cpython-38.pyc,,
+docutils/writers/__pycache__/manpage.cpython-38.pyc,,
+docutils/writers/__pycache__/null.cpython-38.pyc,,
+docutils/writers/__pycache__/pseudoxml.cpython-38.pyc,,
+docutils/writers/_html_base.py,sha256=v7CT4nZcn_KZxKy6AgM2E-YPeqbgG2pDvLYx3R7p0bc,64036
+docutils/writers/docutils_xml.py,sha256=drCp_q1Sex95tPmcqJVJ4kgu1xd-9dM5nIflHRhQjw8,7687
+docutils/writers/html4css1/__init__.py,sha256=wwxBwbvqFW_TwxP4FKHOWtvAcFrHntMXm13UrIuYRzQ,33838
+docutils/writers/html4css1/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/html4css1/html4css1.css,sha256=BvqQaXs-bQ6Vx7TVsdXxxLwoiQeXQ-Wn1z7ZXRXk_q8,7210
+docutils/writers/html4css1/template.txt,sha256=HDzUUyAv7gT4ewGQTqfOE2_9HOVyGu9-wCRgsmoCmjQ,114
+docutils/writers/html5_polyglot/__init__.py,sha256=GJ_5c3geN6ON7tJAhf_uyVtoU8ozF6tusRU04dpf_RU,9734
+docutils/writers/html5_polyglot/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/html5_polyglot/math.css,sha256=hGjowMetSh3oAlkm7_EA2pTtkv_Lg_TgwrBkyNs85Co,4783
+docutils/writers/html5_polyglot/minimal.css,sha256=WCDx7sdr2XxjgUiZvem06_mXdVYdLpqWW1YIEZEpU2o,6843
+docutils/writers/html5_polyglot/plain.css,sha256=MqbZwrpFH1c39wdk0l6R13rIbS8L0MzLWs1m8VrE4X4,7098
+docutils/writers/html5_polyglot/template.txt,sha256=HDzUUyAv7gT4ewGQTqfOE2_9HOVyGu9-wCRgsmoCmjQ,114
+docutils/writers/latex2e/__init__.py,sha256=JL-2tgl5LN8SSyXPUga07oBuvzZm-QYfKrKRDyHg-XY,129749
+docutils/writers/latex2e/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/latex2e/default.tex,sha256=KQFojDUG6AFGSZFGWVsQCslQrWT5-JVB29idVWiRtUA,422
+docutils/writers/latex2e/titlepage.tex,sha256=wxPKr4rylqUamK2U0EJXQTaVQ1392ua5DtSVGDqrNsI,534
+docutils/writers/latex2e/xelatex.tex,sha256=oUEz2Ze3wpoMp0X0iVELcUGNtKVre5Ug5Ujge7OiMgU,672
+docutils/writers/manpage.py,sha256=cbh2x2KGLj2tcgyNau6-87VLmV0c6Hk2fn-aP74nixw,35720
+docutils/writers/null.py,sha256=zyIuah_o8SlqvgbOWLRG9chpeNKky0D13lOTtR1E73U,450
+docutils/writers/odf_odt/__init__.py,sha256=Fb5Qd5q9S8YiMoOu_xwbzCL4Sz7ZLF74vt8RIjZFkZc,136481
+docutils/writers/odf_odt/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/odf_odt/__pycache__/pygmentsformatter.cpython-38.pyc,,
+docutils/writers/odf_odt/pygmentsformatter.py,sha256=iBsRNxRe-v378-whp_F8CwgvuK7Ck4o_Tx4Kae8NlYw,4671
+docutils/writers/odf_odt/styles.odt,sha256=xKv9z2sd1qNxAH28X-5st5JuDZeTw6jyDOxXohsFrKY,16500
+docutils/writers/pep_html/__init__.py,sha256=fM_-gcMw-VLZLgDEDKqiyaQdMWErf1pNbdwHRFVv2UE,3507
+docutils/writers/pep_html/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/pep_html/pep.css,sha256=UbFfiHHFSWusk2rEv7AUaTCS0r6TxfMzgLtW0VURwGw,6367
+docutils/writers/pep_html/template.txt,sha256=CfyVCCoqqB3Y8hOyt7Uxf0XeyTwtFf926L_hJeaS1wU,1294
+docutils/writers/pseudoxml.py,sha256=2bRL9zMleW8jDuGaINvM52siZiJWH1-zQfEELJE2oPE,772
+docutils/writers/s5_html/__init__.py,sha256=Da7SbL0c-XIFyBiJ1HtrgCnAqzqqw4ov37JkSpnptn8,14610
+docutils/writers/s5_html/__pycache__/__init__.cpython-38.pyc,,
+docutils/writers/s5_html/themes/README.txt,sha256=wsty9ouRFxVMrZV2EUTOmfMS_bJJpmA5CqU23fpMccM,301
+docutils/writers/s5_html/themes/big-black/__base__,sha256=WeKnChXCPkrXDs7Xr-Qnf1i-bgFjkeaKJ-ilXV0R5lM,38
+docutils/writers/s5_html/themes/big-black/framing.css,sha256=RctE4TbWO_ctWsmE1LSPdCVRMT1QFlTrNmQNKC4wC2Y,911
+docutils/writers/s5_html/themes/big-black/pretty.css,sha256=VFK99wlPllRBKK0eQ2Yk6RC_-VDMREm-ue2Mp3YMs7A,3606
+docutils/writers/s5_html/themes/big-white/framing.css,sha256=6M4vVFfoErc5LKtuol1RqnId0166VecGy6rYu9cPY9c,906
+docutils/writers/s5_html/themes/big-white/pretty.css,sha256=YO7dDIRq7dXpIdC8pEOf7QaBb9nUvajfWkkQpxt3nJs,3566
+docutils/writers/s5_html/themes/default/blank.gif,sha256=L1YbAqSTduNnms1ZdeN5Cr3_Cey636HhhYx7om4__O8,49
+docutils/writers/s5_html/themes/default/framing.css,sha256=fcGapNDqnTT2w-2HpWTHb5yf9Yq-_31DJuazk7lCSQw,1003
+docutils/writers/s5_html/themes/default/iepngfix.htc,sha256=ve7IwOG4pkjDmYItcuQrUbESmVaY6ACDhhA5YP9d73c,1190
+docutils/writers/s5_html/themes/default/opera.css,sha256=guPZOg_BINv-LjV9_IAM7ILFQ-fKALNjlP1i06e5dmA,261
+docutils/writers/s5_html/themes/default/outline.css,sha256=z3ACJiW3_gnG8XFvX602PMTYvKhbRybqCeoWl3O_pA0,648
+docutils/writers/s5_html/themes/default/pretty.css,sha256=dUbMlVTFGx3ofvXGUmhnKAADhBkHsdU0ysWpxwX-70M,4384
+docutils/writers/s5_html/themes/default/print.css,sha256=INhYRMsY7y2wd9p7tqjcDWBREXHUMO-2ApAWvITyetI,818
+docutils/writers/s5_html/themes/default/s5-core.css,sha256=MrHjKxQ7P7ZFC2FmEq2BnkRWs59YVzUS_ZOw8CHC2Jk,451
+docutils/writers/s5_html/themes/default/slides.css,sha256=VKYQ1Oe8lZ8LHxzPqJiU79J0z295nkmIbzsXL-N_dfQ,283
+docutils/writers/s5_html/themes/default/slides.js,sha256=n6_977F6UKSfpYSDu5RKhS1g7iehHcmxm1jDLD17ME4,15800
+docutils/writers/s5_html/themes/medium-black/__base__,sha256=822LJG-LrdBZY6CA7wsLFCFzsYfxbyz2mr1j6rpb1UA,41
+docutils/writers/s5_html/themes/medium-black/pretty.css,sha256=zoRP67Cmy7JzwnXqKe02GwGzt0p5z509ymlbaxXuPoI,4031
+docutils/writers/s5_html/themes/medium-white/framing.css,sha256=nstQg2Fwdm6TTRHflpYRE7Q3b2jFO5p6tyDXJhsmi0I,944
+docutils/writers/s5_html/themes/medium-white/pretty.css,sha256=SafUPS2T_uel8lPQlvouTXUrgT9QY52nxnBJDt_pmP4,3991
+docutils/writers/s5_html/themes/small-black/__base__,sha256=WmiB80z49RfMsy_7tFI042AfUgyztL5OXI3tap9EfQM,40
+docutils/writers/s5_html/themes/small-black/pretty.css,sha256=G_e83H9lIDHXtUBJRCnsnxSiAhP0zaAafQwSviioUQ8,4030
+docutils/writers/s5_html/themes/small-white/framing.css,sha256=klf55tsjjL7FuzlWi0yY_4bHJWZZhlD36VCevg45o70,941
+docutils/writers/s5_html/themes/small-white/pretty.css,sha256=yaLNE-loYn_nSCuzvGVJWHAbh90dxdO5I06Cv-d4wcM,4001
+docutils/writers/xetex/__init__.py,sha256=7ItbcHZR3zeXIzX7jL1RtYeW6FP0jEQ_1iBgl4Dgywc,5701
+docutils/writers/xetex/__pycache__/__init__.cpython-38.pyc,,
Index: lambda-function/msgpack/_unpacker.pyx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/msgpack/_unpacker.pyx	(date 1598555316244)
+++ lambda-function/msgpack/_unpacker.pyx	(date 1598555316244)
@@ -0,0 +1,541 @@
+# coding: utf-8
+
+from cpython cimport *
+cdef extern from "Python.h":
+    ctypedef struct PyObject
+    cdef int PyObject_AsReadBuffer(object o, const void** buff, Py_ssize_t* buf_len) except -1
+    object PyMemoryView_GetContiguous(object obj, int buffertype, char order)
+
+from libc.stdlib cimport *
+from libc.string cimport *
+from libc.limits cimport *
+ctypedef unsigned long long uint64_t
+
+from .exceptions import (
+    BufferFull,
+    OutOfData,
+    ExtraData,
+    FormatError,
+    StackError,
+)
+from .ext import ExtType, Timestamp
+
+cdef object giga = 1_000_000_000
+
+
+cdef extern from "unpack.h":
+    ctypedef struct msgpack_user:
+        bint use_list
+        bint raw
+        bint has_pairs_hook # call object_hook with k-v pairs
+        bint strict_map_key
+        int timestamp
+        PyObject* object_hook
+        PyObject* list_hook
+        PyObject* ext_hook
+        PyObject* timestamp_t
+        PyObject *giga;
+        PyObject *utc;
+        char *unicode_errors
+        Py_ssize_t max_str_len
+        Py_ssize_t max_bin_len
+        Py_ssize_t max_array_len
+        Py_ssize_t max_map_len
+        Py_ssize_t max_ext_len
+
+    ctypedef struct unpack_context:
+        msgpack_user user
+        PyObject* obj
+        Py_ssize_t count
+
+    ctypedef int (*execute_fn)(unpack_context* ctx, const char* data,
+                               Py_ssize_t len, Py_ssize_t* off) except? -1
+    execute_fn unpack_construct
+    execute_fn unpack_skip
+    execute_fn read_array_header
+    execute_fn read_map_header
+    void unpack_init(unpack_context* ctx)
+    object unpack_data(unpack_context* ctx)
+    void unpack_clear(unpack_context* ctx)
+
+cdef inline init_ctx(unpack_context *ctx,
+                     object object_hook, object object_pairs_hook,
+                     object list_hook, object ext_hook,
+                     bint use_list, bint raw, int timestamp,
+                     bint strict_map_key,
+                     const char* unicode_errors,
+                     Py_ssize_t max_str_len, Py_ssize_t max_bin_len,
+                     Py_ssize_t max_array_len, Py_ssize_t max_map_len,
+                     Py_ssize_t max_ext_len):
+    unpack_init(ctx)
+    ctx.user.use_list = use_list
+    ctx.user.raw = raw
+    ctx.user.strict_map_key = strict_map_key
+    ctx.user.object_hook = ctx.user.list_hook = <PyObject*>NULL
+    ctx.user.max_str_len = max_str_len
+    ctx.user.max_bin_len = max_bin_len
+    ctx.user.max_array_len = max_array_len
+    ctx.user.max_map_len = max_map_len
+    ctx.user.max_ext_len = max_ext_len
+
+    if object_hook is not None and object_pairs_hook is not None:
+        raise TypeError("object_pairs_hook and object_hook are mutually exclusive.")
+
+    if object_hook is not None:
+        if not PyCallable_Check(object_hook):
+            raise TypeError("object_hook must be a callable.")
+        ctx.user.object_hook = <PyObject*>object_hook
+
+    if object_pairs_hook is None:
+        ctx.user.has_pairs_hook = False
+    else:
+        if not PyCallable_Check(object_pairs_hook):
+            raise TypeError("object_pairs_hook must be a callable.")
+        ctx.user.object_hook = <PyObject*>object_pairs_hook
+        ctx.user.has_pairs_hook = True
+
+    if list_hook is not None:
+        if not PyCallable_Check(list_hook):
+            raise TypeError("list_hook must be a callable.")
+        ctx.user.list_hook = <PyObject*>list_hook
+
+    if ext_hook is not None:
+        if not PyCallable_Check(ext_hook):
+            raise TypeError("ext_hook must be a callable.")
+        ctx.user.ext_hook = <PyObject*>ext_hook
+
+    if timestamp < 0 or 3 < timestamp:
+        raise ValueError("timestamp must be 0..3")
+
+    # Add Timestamp type to the user object so it may be used in unpack.h
+    ctx.user.timestamp = timestamp
+    ctx.user.timestamp_t = <PyObject*>Timestamp
+    ctx.user.giga = <PyObject*>giga
+    ctx.user.utc = <PyObject*>utc
+    ctx.user.unicode_errors = unicode_errors
+
+def default_read_extended_type(typecode, data):
+    raise NotImplementedError("Cannot decode extended type with typecode=%d" % typecode)
+
+cdef inline int get_data_from_buffer(object obj,
+                                     Py_buffer *view,
+                                     char **buf,
+                                     Py_ssize_t *buffer_len) except 0:
+    cdef object contiguous
+    cdef Py_buffer tmp
+    if PyObject_GetBuffer(obj, view, PyBUF_FULL_RO) == -1:
+        raise
+    if view.itemsize != 1:
+        PyBuffer_Release(view)
+        raise BufferError("cannot unpack from multi-byte object")
+    if PyBuffer_IsContiguous(view, b'A') == 0:
+        PyBuffer_Release(view)
+        # create a contiguous copy and get buffer
+        contiguous = PyMemoryView_GetContiguous(obj, PyBUF_READ, b'C')
+        PyObject_GetBuffer(contiguous, view, PyBUF_SIMPLE)
+        # view must hold the only reference to contiguous,
+        # so memory is freed when view is released
+        Py_DECREF(contiguous)
+    buffer_len[0] = view.len
+    buf[0] = <char*> view.buf
+    return 1
+
+
+def unpackb(object packed, *, object object_hook=None, object list_hook=None,
+            bint use_list=True, bint raw=False, int timestamp=0, bint strict_map_key=True,
+            unicode_errors=None,
+            object_pairs_hook=None, ext_hook=ExtType,
+            Py_ssize_t max_str_len=-1,
+            Py_ssize_t max_bin_len=-1,
+            Py_ssize_t max_array_len=-1,
+            Py_ssize_t max_map_len=-1,
+            Py_ssize_t max_ext_len=-1):
+    """
+    Unpack packed_bytes to object. Returns an unpacked object.
+
+    Raises ``ExtraData`` when *packed* contains extra bytes.
+    Raises ``ValueError`` when *packed* is incomplete.
+    Raises ``FormatError`` when *packed* is not valid msgpack.
+    Raises ``StackError`` when *packed* contains too nested.
+    Other exceptions can be raised during unpacking.
+
+    See :class:`Unpacker` for options.
+
+    *max_xxx_len* options are configured automatically from ``len(packed)``.
+    """
+    cdef unpack_context ctx
+    cdef Py_ssize_t off = 0
+    cdef int ret
+
+    cdef Py_buffer view
+    cdef char* buf = NULL
+    cdef Py_ssize_t buf_len
+    cdef const char* cerr = NULL
+
+    if unicode_errors is not None:
+        cerr = unicode_errors
+
+    get_data_from_buffer(packed, &view, &buf, &buf_len)
+
+    if max_str_len == -1:
+        max_str_len = buf_len
+    if max_bin_len == -1:
+        max_bin_len = buf_len
+    if max_array_len == -1:
+        max_array_len = buf_len
+    if max_map_len == -1:
+        max_map_len = buf_len//2
+    if max_ext_len == -1:
+        max_ext_len = buf_len
+
+    try:
+        init_ctx(&ctx, object_hook, object_pairs_hook, list_hook, ext_hook,
+                 use_list, raw, timestamp, strict_map_key, cerr,
+                 max_str_len, max_bin_len, max_array_len, max_map_len, max_ext_len)
+        ret = unpack_construct(&ctx, buf, buf_len, &off)
+    finally:
+        PyBuffer_Release(&view);
+
+    if ret == 1:
+        obj = unpack_data(&ctx)
+        if off < buf_len:
+            raise ExtraData(obj, PyBytes_FromStringAndSize(buf+off, buf_len-off))
+        return obj
+    unpack_clear(&ctx)
+    if ret == 0:
+        raise ValueError("Unpack failed: incomplete input")
+    elif ret == -2:
+        raise FormatError
+    elif ret == -3:
+        raise StackError
+    raise ValueError("Unpack failed: error = %d" % (ret,))
+
+
+cdef class Unpacker(object):
+    """Streaming unpacker.
+
+    Arguments:
+
+    :param file_like:
+        File-like object having `.read(n)` method.
+        If specified, unpacker reads serialized data from it and :meth:`feed()` is not usable.
+
+    :param int read_size:
+        Used as `file_like.read(read_size)`. (default: `min(1024**2, max_buffer_size)`)
+
+    :param bool use_list:
+        If true, unpack msgpack array to Python list.
+        Otherwise, unpack to Python tuple. (default: True)
+
+    :param bool raw:
+        If true, unpack msgpack raw to Python bytes.
+        Otherwise, unpack to Python str by decoding with UTF-8 encoding (default).
+
+    :param bool strict_map_key:
+        If true (default), only str or bytes are accepted for map (dict) keys.
+
+    :param callable object_hook:
+        When specified, it should be callable.
+        Unpacker calls it with a dict argument after unpacking msgpack map.
+        (See also simplejson)
+
+    :param callable object_pairs_hook:
+        When specified, it should be callable.
+        Unpacker calls it with a list of key-value pairs after unpacking msgpack map.
+        (See also simplejson)
+
+    :param int max_buffer_size:
+        Limits size of data waiting unpacked.  0 means system's INT_MAX.
+        The default value is 100*1024*1024 (100MiB).
+        Raises `BufferFull` exception when it is insufficient.
+        You should set this parameter when unpacking data from untrusted source.
+
+    :param int max_str_len:
+        Deprecated, use *max_buffer_size* instead.
+        Limits max length of str. (default: max_buffer_size)
+
+    :param int max_bin_len:
+        Deprecated, use *max_buffer_size* instead.
+        Limits max length of bin. (default: max_buffer_size)
+
+    :param int max_array_len:
+        Limits max length of array. (default: max_buffer_size)
+
+    :param int max_map_len:
+        Limits max length of map. (default: max_buffer_size//2)
+
+    :param int max_ext_len:
+        Deprecated, use *max_buffer_size* instead.
+        Limits max size of ext type. (default: max_buffer_size)
+
+    :param str unicode_errors:
+        Error handler used for decoding str type.  (default: `'strict'`)
+
+
+    Example of streaming deserialize from file-like object::
+
+        unpacker = Unpacker(file_like)
+        for o in unpacker:
+            process(o)
+
+    Example of streaming deserialize from socket::
+
+        unpacker = Unpacker()
+        while True:
+            buf = sock.recv(1024**2)
+            if not buf:
+                break
+            unpacker.feed(buf)
+            for o in unpacker:
+                process(o)
+
+    Raises ``ExtraData`` when *packed* contains extra bytes.
+    Raises ``OutOfData`` when *packed* is incomplete.
+    Raises ``FormatError`` when *packed* is not valid msgpack.
+    Raises ``StackError`` when *packed* contains too nested.
+    Other exceptions can be raised during unpacking.
+    """
+    cdef unpack_context ctx
+    cdef char* buf
+    cdef Py_ssize_t buf_size, buf_head, buf_tail
+    cdef object file_like
+    cdef object file_like_read
+    cdef Py_ssize_t read_size
+    # To maintain refcnt.
+    cdef object object_hook, object_pairs_hook, list_hook, ext_hook
+    cdef object unicode_errors
+    cdef Py_ssize_t max_buffer_size
+    cdef uint64_t stream_offset
+
+    def __cinit__(self):
+        self.buf = NULL
+
+    def __dealloc__(self):
+        PyMem_Free(self.buf)
+        self.buf = NULL
+
+    def __init__(self, file_like=None, *, Py_ssize_t read_size=0,
+                 bint use_list=True, bint raw=False, int timestamp=0, bint strict_map_key=True,
+                 object object_hook=None, object object_pairs_hook=None, object list_hook=None,
+                 unicode_errors=None, Py_ssize_t max_buffer_size=100*1024*1024,
+                 object ext_hook=ExtType,
+                 Py_ssize_t max_str_len=-1,
+                 Py_ssize_t max_bin_len=-1,
+                 Py_ssize_t max_array_len=-1,
+                 Py_ssize_t max_map_len=-1,
+                 Py_ssize_t max_ext_len=-1):
+        cdef const char *cerr=NULL
+
+        self.object_hook = object_hook
+        self.object_pairs_hook = object_pairs_hook
+        self.list_hook = list_hook
+        self.ext_hook = ext_hook
+
+        self.file_like = file_like
+        if file_like:
+            self.file_like_read = file_like.read
+            if not PyCallable_Check(self.file_like_read):
+                raise TypeError("`file_like.read` must be a callable.")
+
+        if not max_buffer_size:
+            max_buffer_size = INT_MAX
+        if max_str_len == -1:
+            max_str_len = max_buffer_size
+        if max_bin_len == -1:
+            max_bin_len = max_buffer_size
+        if max_array_len == -1:
+            max_array_len = max_buffer_size
+        if max_map_len == -1:
+            max_map_len = max_buffer_size//2
+        if max_ext_len == -1:
+            max_ext_len = max_buffer_size
+
+        if read_size > max_buffer_size:
+            raise ValueError("read_size should be less or equal to max_buffer_size")
+        if not read_size:
+            read_size = min(max_buffer_size, 1024**2)
+
+        self.max_buffer_size = max_buffer_size
+        self.read_size = read_size
+        self.buf = <char*>PyMem_Malloc(read_size)
+        if self.buf == NULL:
+            raise MemoryError("Unable to allocate internal buffer.")
+        self.buf_size = read_size
+        self.buf_head = 0
+        self.buf_tail = 0
+        self.stream_offset = 0
+
+        if unicode_errors is not None:
+            self.unicode_errors = unicode_errors
+            cerr = unicode_errors
+
+        init_ctx(&self.ctx, object_hook, object_pairs_hook, list_hook,
+                 ext_hook, use_list, raw, timestamp, strict_map_key, cerr,
+                 max_str_len, max_bin_len, max_array_len,
+                 max_map_len, max_ext_len)
+
+    def feed(self, object next_bytes):
+        """Append `next_bytes` to internal buffer."""
+        cdef Py_buffer pybuff
+        cdef char* buf
+        cdef Py_ssize_t buf_len
+
+        if self.file_like is not None:
+            raise AssertionError(
+                    "unpacker.feed() is not be able to use with `file_like`.")
+
+        get_data_from_buffer(next_bytes, &pybuff, &buf, &buf_len)
+        try:
+            self.append_buffer(buf, buf_len)
+        finally:
+            PyBuffer_Release(&pybuff)
+
+    cdef append_buffer(self, void* _buf, Py_ssize_t _buf_len):
+        cdef:
+            char* buf = self.buf
+            char* new_buf
+            Py_ssize_t head = self.buf_head
+            Py_ssize_t tail = self.buf_tail
+            Py_ssize_t buf_size = self.buf_size
+            Py_ssize_t new_size
+
+        if tail + _buf_len > buf_size:
+            if ((tail - head) + _buf_len) <= buf_size:
+                # move to front.
+                memmove(buf, buf + head, tail - head)
+                tail -= head
+                head = 0
+            else:
+                # expand buffer.
+                new_size = (tail-head) + _buf_len
+                if new_size > self.max_buffer_size:
+                    raise BufferFull
+                new_size = min(new_size*2, self.max_buffer_size)
+                new_buf = <char*>PyMem_Malloc(new_size)
+                if new_buf == NULL:
+                    # self.buf still holds old buffer and will be freed during
+                    # obj destruction
+                    raise MemoryError("Unable to enlarge internal buffer.")
+                memcpy(new_buf, buf + head, tail - head)
+                PyMem_Free(buf)
+
+                buf = new_buf
+                buf_size = new_size
+                tail -= head
+                head = 0
+
+        memcpy(buf + tail, <char*>(_buf), _buf_len)
+        self.buf = buf
+        self.buf_head = head
+        self.buf_size = buf_size
+        self.buf_tail = tail + _buf_len
+
+    cdef read_from_file(self):
+        next_bytes = self.file_like_read(
+                min(self.read_size,
+                    self.max_buffer_size - (self.buf_tail - self.buf_head)
+                    ))
+        if next_bytes:
+            self.append_buffer(PyBytes_AsString(next_bytes), PyBytes_Size(next_bytes))
+        else:
+            self.file_like = None
+
+    cdef object _unpack(self, execute_fn execute, bint iter=0):
+        cdef int ret
+        cdef object obj
+        cdef Py_ssize_t prev_head
+
+        if self.buf_head >= self.buf_tail and self.file_like is not None:
+            self.read_from_file()
+
+        while 1:
+            prev_head = self.buf_head
+            if prev_head >= self.buf_tail:
+                if iter:
+                    raise StopIteration("No more data to unpack.")
+                else:
+                    raise OutOfData("No more data to unpack.")
+
+            ret = execute(&self.ctx, self.buf, self.buf_tail, &self.buf_head)
+            self.stream_offset += self.buf_head - prev_head
+
+            if ret == 1:
+                obj = unpack_data(&self.ctx)
+                unpack_init(&self.ctx)
+                return obj
+            elif ret == 0:
+                if self.file_like is not None:
+                    self.read_from_file()
+                    continue
+                if iter:
+                    raise StopIteration("No more data to unpack.")
+                else:
+                    raise OutOfData("No more data to unpack.")
+            elif ret == -2:
+                raise FormatError
+            elif ret == -3:
+                raise StackError
+            else:
+                raise ValueError("Unpack failed: error = %d" % (ret,))
+
+    def read_bytes(self, Py_ssize_t nbytes):
+        """Read a specified number of raw bytes from the stream"""
+        cdef Py_ssize_t nread
+        nread = min(self.buf_tail - self.buf_head, nbytes)
+        ret = PyBytes_FromStringAndSize(self.buf + self.buf_head, nread)
+        self.buf_head += nread
+        if nread < nbytes and self.file_like is not None:
+            ret += self.file_like.read(nbytes - nread)
+            nread = len(ret)
+        self.stream_offset += nread
+        return ret
+
+    def unpack(self):
+        """Unpack one object
+
+        Raises `OutOfData` when there are no more bytes to unpack.
+        """
+        return self._unpack(unpack_construct)
+
+    def skip(self):
+        """Read and ignore one object, returning None
+
+        Raises `OutOfData` when there are no more bytes to unpack.
+        """
+        return self._unpack(unpack_skip)
+
+    def read_array_header(self):
+        """assuming the next object is an array, return its size n, such that
+        the next n unpack() calls will iterate over its contents.
+
+        Raises `OutOfData` when there are no more bytes to unpack.
+        """
+        return self._unpack(read_array_header)
+
+    def read_map_header(self):
+        """assuming the next object is a map, return its size n, such that the
+        next n * 2 unpack() calls will iterate over its key-value pairs.
+
+        Raises `OutOfData` when there are no more bytes to unpack.
+        """
+        return self._unpack(read_map_header)
+
+    def tell(self):
+        """Returns the current position of the Unpacker in bytes, i.e., the
+        number of bytes that were read from the input, also the starting
+        position of the next object.
+        """
+        return self.stream_offset
+
+    def __iter__(self):
+        return self
+
+    def __next__(self):
+        return self._unpack(unpack_construct, 1)
+
+    # for debug.
+    #def _buf(self):
+    #    return PyString_FromStringAndSize(self.buf, self.buf_tail)
+
+    #def _off(self):
+    #    return self.buf_head
Index: lambda-function/msgpack/_cmsgpack.pyx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/msgpack/_cmsgpack.pyx	(date 1598555316209)
+++ lambda-function/msgpack/_cmsgpack.pyx	(date 1598555316209)
@@ -0,0 +1,11 @@
+# coding: utf-8
+#cython: embedsignature=True, c_string_encoding=ascii, language_level=3
+from cpython.datetime cimport import_datetime, datetime_new
+import_datetime()
+
+import datetime
+cdef object utc = datetime.timezone.utc
+cdef object epoch = datetime_new(1970, 1, 1, 0, 0, 0, 0, tz=utc)
+
+include "_packer.pyx"
+include "_unpacker.pyx"
Index: lambda-function/python_dateutil-2.8.1.dist-info/RECORD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/python_dateutil-2.8.1.dist-info/RECORD	(date 1597411787775)
+++ lambda-function/python_dateutil-2.8.1.dist-info/RECORD	(date 1597411787775)
@@ -0,0 +1,44 @@
+dateutil/__init__.py,sha256=lXElASqwYGwqlrSWSeX19JwF5Be9tNecDa9ebk-0gmk,222
+dateutil/__pycache__/__init__.cpython-38.pyc,,
+dateutil/__pycache__/_common.cpython-38.pyc,,
+dateutil/__pycache__/_version.cpython-38.pyc,,
+dateutil/__pycache__/easter.cpython-38.pyc,,
+dateutil/__pycache__/relativedelta.cpython-38.pyc,,
+dateutil/__pycache__/rrule.cpython-38.pyc,,
+dateutil/__pycache__/tzwin.cpython-38.pyc,,
+dateutil/__pycache__/utils.cpython-38.pyc,,
+dateutil/_common.py,sha256=77w0yytkrxlYbSn--lDVPUMabUXRR9I3lBv_vQRUqUY,932
+dateutil/_version.py,sha256=U1JNX8P5pUNBtcStwfGyAUIMMHGZXhiTDTVXgAUWxs4,116
+dateutil/easter.py,sha256=0liVsgqSx-NPhaFevOJaYgEbrSu2oQQ2o9m_OEBdc-s,2684
+dateutil/parser/__init__.py,sha256=wWk6GFuxTpjoggCGtgkceJoti4pVjl4_fHQXpNOaSYg,1766
+dateutil/parser/__pycache__/__init__.cpython-38.pyc,,
+dateutil/parser/__pycache__/_parser.cpython-38.pyc,,
+dateutil/parser/__pycache__/isoparser.cpython-38.pyc,,
+dateutil/parser/_parser.py,sha256=F0w8h9txvatnYAmeJ1MMbIAvZHRzy3iFjv-AZqRovNs,58804
+dateutil/parser/isoparser.py,sha256=BeEEqIeqhcgik5Cp1_G5Aztsqayp-MAr3aVqAKo1XRc,13098
+dateutil/relativedelta.py,sha256=GjVxqpAVWnG67rdbf7pkoIlJvQqmju9NSfGCcqblc7U,24904
+dateutil/rrule.py,sha256=dStRcOIj8jul-BurMKguc_IBckY-Qci1K6EYqNW8eUg,66514
+dateutil/tz/__init__.py,sha256=F-Mz13v6jYseklQf9Te9J6nzcLDmq47gORa61K35_FA,444
+dateutil/tz/__pycache__/__init__.cpython-38.pyc,,
+dateutil/tz/__pycache__/_common.cpython-38.pyc,,
+dateutil/tz/__pycache__/_factories.cpython-38.pyc,,
+dateutil/tz/__pycache__/tz.cpython-38.pyc,,
+dateutil/tz/__pycache__/win.cpython-38.pyc,,
+dateutil/tz/_common.py,sha256=cgzDTANsOXvEc86cYF77EsliuSab8Puwpsl5-bX3_S4,12977
+dateutil/tz/_factories.py,sha256=unb6XQNXrPMveksTCU-Ag8jmVZs4SojoPUcAHpWnrvU,2569
+dateutil/tz/tz.py,sha256=npaGnA2M2LGUUerXzAml9rMM-BE771igYFcFETeC3JE,62851
+dateutil/tz/win.py,sha256=xJszWgSwE1xPx_HJj4ZkepyukC_hNy016WMcXhbRaB8,12935
+dateutil/tzwin.py,sha256=7Ar4vdQCnnM0mKR3MUjbIKsZrBVfHgdwsJZc_mGYRew,59
+dateutil/utils.py,sha256=Agvhi7i3HuJdwHYCe9lDS63l_LNFUUlB2hmR3ZKNYwE,1959
+dateutil/zoneinfo/__init__.py,sha256=KYg0pthCMjcp5MXSEiBJn3nMjZeNZav7rlJw5-tz1S4,5889
+dateutil/zoneinfo/__pycache__/__init__.cpython-38.pyc,,
+dateutil/zoneinfo/__pycache__/rebuild.cpython-38.pyc,,
+dateutil/zoneinfo/dateutil-zoneinfo.tar.gz,sha256=6bZJKrN3mhnCqMgQgFSllQNNbtld9AnuPaRIXWoSH4o,153315
+dateutil/zoneinfo/rebuild.py,sha256=2uFJQiW3Fl8fVogrSXisJMpLeHI1zGwpvBFF43QdeF0,1719
+python_dateutil-2.8.1.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
+python_dateutil-2.8.1.dist-info/LICENSE,sha256=ugD1Gg2SgjtaHN4n2LW50jIeZ-2NqbwWPv-W1eF-V34,2889
+python_dateutil-2.8.1.dist-info/METADATA,sha256=u7pGPxvY3bP0MsvsWab9OeTybTnbLX011vZxRW12I1Y,7988
+python_dateutil-2.8.1.dist-info/RECORD,,
+python_dateutil-2.8.1.dist-info/WHEEL,sha256=8zNYZbwQSXoB9IfXOjPfeNwvAsALAjffgk27FqvCWbo,110
+python_dateutil-2.8.1.dist-info/top_level.txt,sha256=4tjdWkhRZvF7LA_BYe_L9gB2w_p2a-z5y6ArjaRkot8,9
+python_dateutil-2.8.1.dist-info/zip-safe,sha256=AbpHGcgLb-kRsJGnwFEktk7uzpZOCcBY74-YBdrKVGs,1
Index: lambda-function/python_dateutil-2.8.1.dist-info/zip-safe
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/python_dateutil-2.8.1.dist-info/zip-safe	(date 1597411787656)
+++ lambda-function/python_dateutil-2.8.1.dist-info/zip-safe	(date 1597411787656)
@@ -0,0 +1,1 @@
+
Index: lambda-function/boto3/examples/cloudfront.rst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/boto3/examples/cloudfront.rst	(date 1597411789856)
+++ lambda-function/boto3/examples/cloudfront.rst	(date 1597411789856)
@@ -0,0 +1,35 @@
+Generate a signed URL for Amazon CloudFront
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+The following example shows how to generate a signed URL for Amazon CloudFront.
+Note that you will need the ``cryptography`` `library <https://cryptography.io/en/latest/>`__ to follow this example::
+
+    import datetime
+
+    from cryptography.hazmat.backends import default_backend
+    from cryptography.hazmat.primitives import hashes
+    from cryptography.hazmat.primitives import serialization
+    from cryptography.hazmat.primitives.asymmetric import padding
+    from botocore.signers import CloudFrontSigner
+
+
+    def rsa_signer(message):
+        with open('path/to/key.pem', 'rb') as key_file:
+            private_key = serialization.load_pem_private_key(
+                key_file.read(),
+                password=None,
+                backend=default_backend()
+            )
+        return private_key.sign(message, padding.PKCS1v15(), hashes.SHA1())
+
+    key_id = 'AKIAIOSFODNN7EXAMPLE'
+    url = 'http://d2949o5mkkp72v.cloudfront.net/hello.txt'
+    expire_date = datetime.datetime(2017, 1, 1)
+
+    cloudfront_signer = CloudFrontSigner(key_id, rsa_signer)
+
+    # Create a signed url that will be valid until the specfic expiry date
+    # provided using a canned policy.
+    signed_url = cloudfront_signer.generate_presigned_url(
+        url, date_less_than=expire_date)
+    print(signed_url)
Index: lambda-function/boto3/examples/s3.rst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/boto3/examples/s3.rst	(date 1597411789857)
+++ lambda-function/boto3/examples/s3.rst	(date 1597411789857)
@@ -0,0 +1,146 @@
+List objects in an Amazon S3 bucket
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+The following example shows how to use an Amazon S3 bucket resource to list
+the objects in the bucket.
+
+.. code-block:: python
+
+    import boto3
+
+    s3 = boto3.resource('s3')
+    bucket = s3.Bucket('my-bucket')
+    for obj in bucket.objects.all():
+        print(obj.key)
+
+
+List top-level common prefixes in Amazon S3 bucket
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+This example shows how to list all of the top-level common prefixes in an
+Amazon S3 bucket:
+
+.. code-block:: python
+
+    import boto3
+
+    client = boto3.client('s3')
+    paginator = client.get_paginator('list_objects')
+    result = paginator.paginate(Bucket='my-bucket', Delimiter='/')
+    for prefix in result.search('CommonPrefixes'):
+        print(prefix.get('Prefix'))
+
+
+Restore Glacier objects in an Amazon S3 bucket
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+The following example shows how to initiate restoration of glacier objects in
+an Amazon S3 bucket, determine if a restoration is on-going, and determine if a
+restoration is finished.
+
+.. code-block:: python
+
+    import boto3
+
+    s3 = boto3.resource('s3')
+    bucket = s3.Bucket('glacier-bucket')
+    for obj_sum in bucket.objects.all():
+        obj = s3.Object(obj_sum.bucket_name, obj_sum.key)
+        if obj.storage_class == 'GLACIER':
+            # Try to restore the object if the storage class is glacier and
+            # the object does not have a completed or ongoing restoration
+            # request.
+            if obj.restore is None:
+                print('Submitting restoration request: %s' % obj.key)
+                obj.restore_object(RestoreRequest={'Days': 1})
+            # Print out objects whose restoration is on-going
+            elif 'ongoing-request="true"' in obj.restore:
+                print('Restoration in-progress: %s' % obj.key)
+            # Print out objects whose restoration is complete
+            elif 'ongoing-request="false"' in obj.restore:
+                print('Restoration complete: %s' % obj.key)
+
+
+Uploading/downloading files using SSE KMS
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+This example shows how to use SSE-KMS to upload objects using
+server side encryption with a key managed by KMS.
+
+We can either use the default KMS master key, or create a
+custom key in AWS and use it to encrypt the object by passing in its
+key id.
+
+With KMS, nothing else needs to be provided for getting the
+object; S3 already knows how to decrypt the object.
+
+
+.. code-block:: python
+
+    import boto3
+    import os
+
+    BUCKET = 'your-bucket-name'
+    s3 = boto3.client('s3')
+    keyid = '<the key id>'
+
+    print("Uploading S3 object with SSE-KMS")
+    s3.put_object(Bucket=BUCKET,
+                  Key='encrypt-key',
+                  Body=b'foobar',
+                  ServerSideEncryption='aws:kms',
+                  # Optional: SSEKMSKeyId
+                  SSEKMSKeyId=keyid)
+    print("Done")
+
+    # Getting the object:
+    print("Getting S3 object...")
+    response = s3.get_object(Bucket=BUCKET,
+                             Key='encrypt-key')
+    print("Done, response body:")
+    print(response['Body'].read())
+
+
+Uploading/downloading files using SSE Customer Keys
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+This example shows how to use SSE-C to upload objects using
+server side encryption with a customer provided key.
+
+First, we'll need a 32 byte key.  For this example, we'll
+randomly generate a key but you can use any 32 byte key
+you want.  Remember, you must the same key to download
+the object.  If you lose the encryption key, you lose
+the object.
+
+Also note how we don't have to provide the SSECustomerKeyMD5.
+Boto3 will automatically compute this value for us.
+
+
+.. code-block:: python
+
+    import boto3
+    import os
+
+    BUCKET = 'your-bucket-name'
+    KEY = os.urandom(32)
+    s3 = boto3.client('s3')
+
+    print("Uploading S3 object with SSE-C")
+    s3.put_object(Bucket=BUCKET,
+                  Key='encrypt-key',
+                  Body=b'foobar',
+                  SSECustomerKey=KEY,
+                  SSECustomerAlgorithm='AES256')
+    print("Done")
+
+    # Getting the object:
+    print("Getting S3 object...")
+    # Note how we're using the same ``KEY`` we
+    # created earlier.
+    response = s3.get_object(Bucket=BUCKET,
+                             Key='encrypt-key',
+                             SSECustomerKey=KEY,
+                             SSECustomerAlgorithm='AES256')
+    print("Done, response body:")
+    print(response['Body'].read())
Index: lambda-function/boto3-1.14.42.dist-info/RECORD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lambda-function/boto3-1.14.42.dist-info/RECORD	(date 1597411790061)
+++ lambda-function/boto3-1.14.42.dist-info/RECORD	(date 1597411790061)
@@ -0,0 +1,100 @@
+boto3-1.14.42.dist-info/DESCRIPTION.rst,sha256=9f5ldciYm-4it2QSVYzKk2_yxkZa3cwXocUORSo5oOs,4331
+boto3-1.14.42.dist-info/INSTALLER,sha256=zuuue4knoyJ-UwPPXg8fezS7VCrXJQrAP7zeNuwvFQg,4
+boto3-1.14.42.dist-info/METADATA,sha256=zT4zirlLhuUSV3vFstqVPhVTaNZQVSBRyvNkvBY43js,5313
+boto3-1.14.42.dist-info/RECORD,,
+boto3-1.14.42.dist-info/REQUESTED,sha256=47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU,0
+boto3-1.14.42.dist-info/WHEEL,sha256=AvR0WeTpDaxT645bl5FQxUK6NPsTls2ttpcGJg3j1Xg,110
+boto3-1.14.42.dist-info/metadata.json,sha256=F_SCmydsMzucAb-SZ1eQOeuBuLz7Fqqwu14SKhPhCUM,1060
+boto3-1.14.42.dist-info/top_level.txt,sha256=MP6_SI1GcPseXodd3Ykt5F_mCBsrUksiziLxjEZKGUU,6
+boto3/__init__.py,sha256=N-pZdS6EQAQhxeGpq7zQYQw569ehp3824c8NycJ9E9w,3340
+boto3/__pycache__/__init__.cpython-38.pyc,,
+boto3/__pycache__/compat.cpython-38.pyc,,
+boto3/__pycache__/exceptions.cpython-38.pyc,,
+boto3/__pycache__/session.cpython-38.pyc,,
+boto3/__pycache__/utils.cpython-38.pyc,,
+boto3/compat.py,sha256=F83Twa5yWeGNo3ADZhgn5Px6GkYRu2miQ9t1ZJ3-USg,1597
+boto3/data/cloudformation/2010-05-15/resources-1.json,sha256=5mFVKJVtbVoHyPdHSyNfZ5mpkgCAws5PhnveSu4qzdI,5110
+boto3/data/cloudwatch/2010-08-01/resources-1.json,sha256=q4AgE8F4pbscd-2U3NYSGAzK55zpMyOQGr83JUxbZXI,11690
+boto3/data/dynamodb/2012-08-10/resources-1.json,sha256=hBLa1Jt7bdT557U9A7UcSi8SCpONKzdbtDRTzjM1-Y0,3849
+boto3/data/ec2/2014-10-01/resources-1.json,sha256=tMG1AMYP2ksnPWY6-3l8DB-EhKsSNtAO9YHhvHqBKu0,68469
+boto3/data/ec2/2015-03-01/resources-1.json,sha256=tMG1AMYP2ksnPWY6-3l8DB-EhKsSNtAO9YHhvHqBKu0,68469
+boto3/data/ec2/2015-04-15/resources-1.json,sha256=tMG1AMYP2ksnPWY6-3l8DB-EhKsSNtAO9YHhvHqBKu0,68469
+boto3/data/ec2/2015-10-01/resources-1.json,sha256=SOfYX2c1KgvnxMO2FCdJpV42rJWNMwVhlFAXhvUPTzA,76564
+boto3/data/ec2/2016-04-01/resources-1.json,sha256=SOfYX2c1KgvnxMO2FCdJpV42rJWNMwVhlFAXhvUPTzA,76564
+boto3/data/ec2/2016-09-15/resources-1.json,sha256=SOfYX2c1KgvnxMO2FCdJpV42rJWNMwVhlFAXhvUPTzA,76564
+boto3/data/ec2/2016-11-15/resources-1.json,sha256=vx7YiL-sUvBFeo4SZ81G7Qa2Hy-y6xY4z2YlSx7_wEw,76922
+boto3/data/glacier/2012-06-01/resources-1.json,sha256=GT5qWQLGeXtrHgTDNG23Mrpyweg6O0Udgd139BuNTVs,19940
+boto3/data/iam/2010-05-08/resources-1.json,sha256=PsOT9yBqSJtluBFHCVRsg6k6Ly2VkSYODnYxSl0DVOc,50357
+boto3/data/opsworks/2013-02-18/resources-1.json,sha256=Y6ygEyegsbYA1gGZn-Ad2yuDd3jUCOt2UKrW_b2YBeM,4136
+boto3/data/s3/2006-03-01/resources-1.json,sha256=VeKALhMRqv7fyDHMLOM5_RzXUEuDdg_n6OIRi3sdB-o,37204
+boto3/data/sns/2010-03-31/resources-1.json,sha256=7zmKQhafgsRDu4U1yiw3NXHz-zJhHKrOmtuoYlxQP-s,9091
+boto3/data/sqs/2012-11-05/resources-1.json,sha256=LRIIr5BId3UDeuBfLn-vRiWsSZCM9_ynqdxF8uzHgy8,6545
+boto3/docs/__init__.py,sha256=z5WyRX2qgsLBS0k6dXTGUJdBi3ne1SrK5fUnQtuFX3c,1529
+boto3/docs/__pycache__/__init__.cpython-38.pyc,,
+boto3/docs/__pycache__/action.cpython-38.pyc,,
+boto3/docs/__pycache__/attr.cpython-38.pyc,,
+boto3/docs/__pycache__/base.cpython-38.pyc,,
+boto3/docs/__pycache__/client.cpython-38.pyc,,
+boto3/docs/__pycache__/collection.cpython-38.pyc,,
+boto3/docs/__pycache__/docstring.cpython-38.pyc,,
+boto3/docs/__pycache__/method.cpython-38.pyc,,
+boto3/docs/__pycache__/resource.cpython-38.pyc,,
+boto3/docs/__pycache__/service.cpython-38.pyc,,
+boto3/docs/__pycache__/subresource.cpython-38.pyc,,
+boto3/docs/__pycache__/utils.cpython-38.pyc,,
+boto3/docs/__pycache__/waiter.cpython-38.pyc,,
+boto3/docs/action.py,sha256=PQw4_g-V4HyU-oCV0U6DUwfDO4WTpq6gzjZdmraRVWY,6170
+boto3/docs/attr.py,sha256=nB4ok-1gw-aAK-9WvFwpTjtnMOHK_xhTabElepcn-iA,2217
+boto3/docs/base.py,sha256=A5U1w8nTEIoOSxlp-69GxZE4z5Gx30ZzKGhjiTxhpjs,1330
+boto3/docs/client.py,sha256=4IdVNMzUXyNrKEhBUzzpcHVbZ6gFpPiRI4_zv2hQVdM,1064
+boto3/docs/collection.py,sha256=YVbeCsQbU-ZkHnG9FVGTIB56h45FR0DUzF72RZI9dDw,10222
+boto3/docs/docstring.py,sha256=j5NEvslBV2FImB2hYox3bzI30AGlOw5nezCCOGxCi1c,2625
+boto3/docs/method.py,sha256=mbkxc-8O1rCIEepg0-8ykmKWx1kszzNVmGMtY_ZW3EE,2768
+boto3/docs/resource.py,sha256=stg856hz8SjYCJQSI627Rcqex3Kj9CfpyxXnGpb4Ys0,10988
+boto3/docs/service.py,sha256=cmBCQ1P4CrJdFoBbHt8RFhbM1rEQ5SVqz2lSDBBvPB4,5479
+boto3/docs/subresource.py,sha256=g9tnSouUIV1OrG363MifU1vfA4GFX4-VyYXC2LDlHow,4620
+boto3/docs/utils.py,sha256=49t2YBFujtm4guzbL1s7OeeLVkhvA0nojBfl49pBvU4,5710
+boto3/docs/waiter.py,sha256=FEBV9uHTonsb1VjtkutI1DuZ0MUEKnrbGzrPUi7IjVk,4046
+boto3/dynamodb/__init__.py,sha256=PdoVyC_cgVtayx5XDOzBw2cnYL1oYvnd7gJN9AE7I5g,561
+boto3/dynamodb/__pycache__/__init__.cpython-38.pyc,,
+boto3/dynamodb/__pycache__/conditions.cpython-38.pyc,,
+boto3/dynamodb/__pycache__/table.cpython-38.pyc,,
+boto3/dynamodb/__pycache__/transform.cpython-38.pyc,,
+boto3/dynamodb/__pycache__/types.cpython-38.pyc,,
+boto3/dynamodb/conditions.py,sha256=pKbxTZ2V14viURClW4KL9yHTj9C8avMQDxc5p_0Gdug,14899
+boto3/dynamodb/table.py,sha256=1B-WgvMpLoMliVVc4lgcWSoMDqP5vjP0CR0oeWveuk0,6293
+boto3/dynamodb/transform.py,sha256=frEjGCQl9cxRbTfpJht3ulMoGrhwROLyndRW_cKA7Yg,12372
+boto3/dynamodb/types.py,sha256=YVvXhUVBNRriNC59w62aYUWh6cYM9IFe_TryWIn3E7s,9677
+boto3/ec2/__init__.py,sha256=PdoVyC_cgVtayx5XDOzBw2cnYL1oYvnd7gJN9AE7I5g,561
+boto3/ec2/__pycache__/__init__.cpython-38.pyc,,
+boto3/ec2/__pycache__/createtags.cpython-38.pyc,,
+boto3/ec2/__pycache__/deletetags.cpython-38.pyc,,
+boto3/ec2/createtags.py,sha256=95UdoeJ2tVN6boBTZjy67P6_FVym_0jUODLpvsCgQLY,1576
+boto3/ec2/deletetags.py,sha256=mLHUD0RbYLqCfD4DO_lg0PTxvktpPDVykDaRnVyksz0,1163
+boto3/examples/cloudfront.rst,sha256=Qy3W9oI-pSy1k-P3DtAlxfL2zP297MQxswwlggvhdng,1389
+boto3/examples/s3.rst,sha256=-ql1FdEitUStrm-4KxOxC2MGFK8bVwXWqZ8TNlt9ksM,4548
+boto3/exceptions.py,sha256=jij2_cM3R68gXOAvk1rSVteL1Gaa1mKrAJKKkomIQrI,3993
+boto3/resources/__init__.py,sha256=47DEQpj8HBSa-_TImW-5JCeuQeRkm5NMpJWZG3hSuFU,0
+boto3/resources/__pycache__/__init__.cpython-38.pyc,,
+boto3/resources/__pycache__/action.cpython-38.pyc,,
+boto3/resources/__pycache__/base.cpython-38.pyc,,
+boto3/resources/__pycache__/collection.cpython-38.pyc,,
+boto3/resources/__pycache__/factory.cpython-38.pyc,,
+boto3/resources/__pycache__/model.cpython-38.pyc,,
+boto3/resources/__pycache__/params.cpython-38.pyc,,
+boto3/resources/__pycache__/response.cpython-38.pyc,,
+boto3/resources/action.py,sha256=4HmyDnm7GbX7iawiMKRIf30hqnXRbTfkyJvARRVyYgA,9514
+boto3/resources/base.py,sha256=mzaGCFA1xfxtacZ6iaOThu1pz3E1VBuJ8YftbcUdZWY,5054
+boto3/resources/collection.py,sha256=UkCdWTnFnuwnrlrYbicKAUF1E5p5FMuKHaULAoHPra8,19049
+boto3/resources/factory.py,sha256=FbT_q4bp1_gyEaMKDirICtMzkcDpG4v3u5yWLKEZKnE,22401
+boto3/resources/model.py,sha256=OhBJ9LLAzvinlUcyg33HteHU1GAbYHNSLv6Lrk7nmrU,20675
+boto3/resources/params.py,sha256=3iMXNcf9zsq9BaUH81PBT5XHOg3f3D_e8-3ve2P3ucs,6133
+boto3/resources/response.py,sha256=1QjHOiEsecZ2Ah5v809JFus4YgURibHyiq3CcKSvPYo,11569
+boto3/s3/__init__.py,sha256=PdoVyC_cgVtayx5XDOzBw2cnYL1oYvnd7gJN9AE7I5g,561
+boto3/s3/__pycache__/__init__.cpython-38.pyc,,
+boto3/s3/__pycache__/inject.cpython-38.pyc,,
+boto3/s3/__pycache__/transfer.cpython-38.pyc,,
+boto3/s3/inject.py,sha256=NsTUDg1LS8kClcL1dHPddGOagySdz7wlnuZ7_F88Usg,26176
+boto3/s3/transfer.py,sha256=Ri8nWJ_49h73xnUvCepGUKDcjkr1aF16V49zc3NdYmE,12812
+boto3/session.py,sha256=fP4RwlpFXDAuJNa2upcL_C0Jp3SGiQdBezOoDvRkTms,19611
+boto3/utils.py,sha256=vQzgyzJ1ZuZ8zSjfwOwIHY94LrlzolNTnb9wQabOdPg,3095
